/*
This file should contain a define for the PROGRAM that will be
executed by the Moncky 1 processor.

Directly below is a few settings for the MonckyUno emulator:

DEBUG:
If defined, debugging is enabled, and information such us initial
and final state of the whole processor (and memory) will be printed
as well as the current instructions that are being executed.
The downside of it is that it can slow down the CPU and that
a lot of memory will be used up (so only about 1-2 blocks of
memory can be allocated).
*/
#define DEBUG
// If defined, disables the printing of the instructions
// being executed, which is the main cause of slow performance.
// So only errors, warnings, and the initial and final state will be printed.
#define DEBUG_DONT_PRINT_INSTRUCTIONS
// If defined, all values in the new block will be cleared (set to 0)
// when a new block is allocated.
#define CLEAR_GARBAGE_ON_ALLOC
// Defines the time (in ms) a single register's number and 
// value will be shown for when button1 is pressed.
#define BUTTON1_DURATION_PER_REGISTER 3000
// If defined, the registers that posess a value of 0 will
// not be shown (skipped), this makes displaying all the
// registers take less time, without losing any information.
#define BUTTON1_SKIP_REGS_WITH_ZERO



/*
MEMORY ALLOCATION TEST PROGRAM

li r0, 0 ;current block
li r10, 1
li r8, 8
li r6, 1
shl r6, r8
:newblock
li r2, 1
li r11, :loop
:loop
nop r1, r0
shl r1, r8
or r1, r2
st r1, (r1)
shl r2, r10
nop r5, r2
sub r5, r6
jpnz r11
add r0, r10
li r11, :newblock
jp r11
*/
/*
#define PROGRAM {                   \
    0x1000, 0x101a, 0x1088, 0x1016, \
    0x4668, 0x1012, 0x107b, 0x4010, \
    0x4618, 0x4112, 0xa011, 0x462a, \
    0x4052, 0x4556, 0xf03b, 0x440a, \
    0x105b, 0xc00b,                 \
}
*/

/*
; SAY HI PROGRAM
; load msB
li r0, 0x5d 
; shift msB to left by 8 bits
li r1, 8 
shl r0, r1
; load lsB
li r1, 0x14
; combine lsB with msB
OR r0, r1
; copy to display
NOP r15, r0
halt
*/
/*
//program.h generated by MonckyCode 9000 v1.5
#define PROGRAM {                   \
    0x15d0, 0x1081, 0x4601, 0x1141, \
    0x4101, 0x40f0, 0x0000,         \
}
*/

/*
CARLOS' LOADING BAR CHALLENGE
li r0, 1
li r12, 0x88
li r1, 8
li r13, 1
shl r12, r1
li r11, 0x88
or r12, r11
nop r14, r13
nop r11, r12
shl r13, r0
and r11, r13
jpnz r1
nop r14, r13
jpz r0
jp r1
*/
///*
//program.h generated by MonckyCode 9000 v1.5
#define PROGRAM {                   \
    0x1010, 0x188c, 0x1081, 0x101d, \
    0x46c1, 0x188b, 0x41cb, 0x40ed, \
    0x40bc, 0x46d0, 0x42bd, 0xf031, \
    0x40ed, 0xf020, 0xc001,         \
}
//*/
